{"version":3,"file":"Effectful.js","names":["createEffect","onCleanup","createRoot","getOwner","runWithOwner","createStoppableEffect","Effectful","Base","effects","Set","fn","method","createEffect1","queueMicrotask","createEffect2","stopEffects","stopEffects1","stopEffects2","#createEffect1","effect","add","delete","#stopEffects1","stop","owner","dispose","#createEffect2","#stopEffects2","Effects","Object"],"sources":["../src/Effectful.ts"],"sourcesContent":["import {type Owner, createEffect, onCleanup, createRoot, getOwner, runWithOwner} from 'solid-js'\nimport type {AnyConstructor} from 'lowclass'\nimport {createStoppableEffect, type Effect} from './createStoppableEffect.js'\n\n/**\n * @class Effectful -\n *\n * `mixin`\n *\n * Create Solid.js effects using `this.createEffect(fn)` and easily stop them\n * all by calling `this.stopEffects()`.\n *\n * Example:\n *\n * ```js\n * import {reactive, signal} from 'classy-solid'\n * import {foo} from 'somewhere'\n * import {bar} from 'elsewhere'\n *\n * class MyClass extends Effectful(BaseClass) {\n *   constructor() {\n *     super()\n *\n *     // Log `foo` and `bar` any time either of them change.\n *     this.createEffect(() => {\n *       console.log('foo, bar:', foo(), bar())\n *     })\n *\n *     // Log only `bar` any time it changes.\n *     this.createEffect(() => {\n *       console.log('bar:', bar())\n *     })\n *   }\n *\n *   dispose() {\n *     // Later, stop both of the effects.\n *     this.stopEffects()\n *   }\n * }\n * ```\n */\nexport function Effectful<T extends AnyConstructor>(Base: T) {\n\treturn class Effectful extends Base {\n\t\t#effects = new Set<Effect>()\n\n\t\t/**\n\t\t * Create a Solid.js effect. The difference from regular\n\t\t * `createEffect()` is that `this` tracks the effects created, so that\n\t\t * they can all be stopped with `this.stopEffects()`.\n\t\t *\n\t\t * Effects can also be stopped or resumed individually:\n\t\t *\n\t\t * ```js\n\t\t * const effect1 = this.createEffect(() => {...})\n\t\t * const effect2 = this.createEffect(() => {...})\n\t\t *\n\t\t * // ...later\n\t\t * effect1.stop()\n\t\t *\n\t\t * // ...later\n\t\t * effect1.resume()\n\t\t * ```\n\t\t */\n\t\tcreateEffect(fn: () => void) {\n\t\t\tlet method = 4\n\t\t\tif (method === 1) this.#createEffect1(fn) // not working, bugs out when inside a Solid render() root, effects stop re-running. https://discord.com/channels/722131463138705510/751355413701591120/1188246668466991134\n\t\t\tif (method === 2) createRoot(() => this.#createEffect1(fn)) // works without nesting, but leaks stopped effects until the parent owner is cleaned up (will never clean up if the parent is running for lifetime of the app).\n\t\t\tif (method === 3) queueMicrotask(() => this.#createEffect1(fn)) // works without nesting, without leaks\n\t\t\tif (method === 4) this.#createEffect2(fn) // works with nesting, without leaks\n\t\t}\n\n\t\t/**\n\t\t * Stop all of the effects that were created.\n\t\t */\n\t\tstopEffects() {\n\t\t\tlet method = 2\n\t\t\tif (method === 1) this.#stopEffects1()\n\t\t\tif (method === 2) this.#stopEffects2()\n\t\t}\n\n\t\t// Method 1 //////////////////////////////////////////\n\t\t// Works fine when not in a parent context, or else currently leaks or has the above mentioned bug while a parent exists.\n\n\t\t#createEffect1(fn: () => void) {\n\t\t\tlet effect: Effect | null = null\n\n\t\t\teffect = createStoppableEffect(() => {\n\t\t\t\tif (effect) this.#effects.add(effect)\n\t\t\t\t// nest the user's effect so that if it re-runs a lot it is not deleting/adding from/to our #effects Set a lot.\n\t\t\t\tcreateEffect(fn)\n\t\t\t\tonCleanup(() => this.#effects.delete(effect!))\n\t\t\t})\n\n\t\t\tthis.#effects.add(effect)\n\t\t}\n\n\t\t#stopEffects1() {\n\t\t\tfor (const effect of this.#effects) effect.stop()\n\t\t}\n\n\t\t// Method 2 //////////////////////////////////////////\n\t\t// Works, with nesting, no leaks.\n\n\t\t#owner: Owner | null = null\n\t\t#dispose: (() => void) | null = null\n\n\t\t#createEffect2(fn: () => void) {\n\t\t\tif (!this.#owner) {\n\t\t\t\tcreateRoot(dispose => {\n\t\t\t\t\tthis.#owner = getOwner()\n\t\t\t\t\tthis.#dispose = dispose\n\t\t\t\t\tthis.#createEffect2(fn)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tlet owner = getOwner()\n\t\t\t\twhile (owner && owner !== this.#owner) owner = owner?.owner ?? null\n\n\t\t\t\t// this.#owner found in the parents of current owner therefore,\n\t\t\t\t// run with current nested owner like a regular solid\n\t\t\t\t// createEffect()\n\t\t\t\tif (owner === this.#owner) return createEffect(fn)\n\n\t\t\t\t// this.#owner wasn't found on the parent owners\n\t\t\t\t// run with this.#owner\n\t\t\t\trunWithOwner(this.#owner, () => createEffect(fn))\n\t\t\t}\n\t\t}\n\n\t\t#stopEffects2() {\n\t\t\tthis.#dispose?.()\n\t\t}\n\t}\n}\n\n/**\n * Shortcut for instantiating or extending directly instead of using the mixin.\n * F.e.\n *\n * ```js\n * class Car extends Effects {\n *   start() {\n *     this.createEffect(() => {...})\n *     this.createEffect(() => {...})\n *   }\n *   stop() {\n *     this.stopEffects()\n *   }\n * }\n *\n * const specialEffects = new Effects()\n * specialEffects.createEffect(() => {})\n * // ...later\n * specialEffects.stopEffects()\n * ```\n */\nexport class Effects extends Effectful(Object) {}\n"],"mappings":"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"}