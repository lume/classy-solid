{"version":3,"file":"createDeferredEffect.js","names":["createSignal","_createSignal","createEffect","onCleanup","getOwner","runWithOwner","effectQueue","Set","runningEffects","effectDeps","Map","currentEffect","value","options","_get","_set","get","deps","set","add","v","fn","dep","delete","effectTaskIsScheduled","createDeferredEffect","initial","prev","clear","owner","queueMicrotask","runEffects"],"sources":["../src/createDeferredEffect.ts"],"sourcesContent":["// TODO switch to non-dep-tracking non-queue-modifying deferred signals, because those do not break with regular effects.\n\nimport {createSignal as _createSignal, createEffect, onCleanup, getOwner, runWithOwner} from 'solid-js'\n\nimport type {EffectFunction} from 'solid-js/types/reactive/signal'\n\nconst effectQueue: Set<EffectFunction<any>> = new Set()\nlet runningEffects = false\n\n// map of effects to dependencies\nconst effectDeps = new Map<EffectFunction<any>, Set<(v: any) => any>>()\nlet currentEffect: EffectFunction<any> = () => {}\n\n// Override createSignal in order to implement custom tracking of effect\n// dependencies, so that when signals change, we are aware which dependenct\n// effects need to be moved to the end of the effect queue while running\n// deferred effects in a microtask.\nexport let createSignal = ((value, options) => {\n\tlet [_get, _set] = _createSignal(value, options)\n\n\tconst get = (() => {\n\t\tif (!runningEffects) return _get()\n\n\t\tlet deps = effectDeps.get(currentEffect)\n\t\tif (!deps) effectDeps.set(currentEffect, (deps = new Set()))\n\t\tdeps.add(_set)\n\n\t\treturn _get()\n\t}) as typeof _get\n\n\tconst set = (v => {\n\t\tif (!runningEffects) return _set(v as any)\n\n\t\t// This is inefficient, for proof of concept, unable to use Solid\n\t\t// internals on the outside.\n\t\tfor (const [fn, deps] of effectDeps) {\n\t\t\tfor (const dep of deps) {\n\t\t\t\tif (dep === _set) {\n\t\t\t\t\t// move to the end\n\t\t\t\t\teffectQueue.delete(fn)\n\t\t\t\t\teffectQueue.add(fn)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn _set(v as any)\n\t}) as typeof _set\n\n\treturn [get, set]\n}) as typeof _createSignal\n\nlet effectTaskIsScheduled = false\n\n// TODO Option so the first run is deferred instead of immediate? This already\n// happens outside of a root.\nexport const createDeferredEffect = ((fn, value, options) => {\n\tlet initial = true\n\n\tcreateEffect(\n\t\t(prev: any) => {\n\t\t\tif (initial) {\n\t\t\t\tinitial = false\n\n\t\t\t\tcurrentEffect = fn\n\t\t\t\teffectDeps.get(fn)?.clear() // clear to track deps, or else it won't track new deps based on code branching\n\t\t\t\tfn(prev)\n\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\teffectQueue.add(fn) // add, or move to the end, of the queue. TODO This is probably redundant now, but I haven't tested yet.\n\n\t\t\t// If we're currently running the queue, return because fn will run\n\t\t\t// again at the end of the queue iteration due to our overriden\n\t\t\t// createSignal moving it to the end.\n\t\t\tif (runningEffects) return\n\n\t\t\tif (effectTaskIsScheduled) return\n\n\t\t\teffectTaskIsScheduled = true\n\n\t\t\tconst owner = getOwner()\n\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tif (owner) runWithOwner(owner, runEffects)\n\t\t\t\telse runEffects()\n\t\t\t})\n\t\t},\n\t\tvalue,\n\t\toptions,\n\t)\n\n\tgetOwner() &&\n\t\tonCleanup(() => {\n\t\t\teffectDeps.delete(fn)\n\t\t\teffectQueue.delete(fn)\n\t\t})\n}) as typeof createEffect\n\nfunction runEffects() {\n\trunningEffects = true\n\n\tfor (const fn of effectQueue) {\n\t\teffectQueue.delete(fn) // TODO This is probably redundant now, but I haven't tested yet.\n\t\tcreateDeferredEffect(fn)\n\t}\n\n\trunningEffects = false\n\teffectTaskIsScheduled = false\n}\n"],"mappings":"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"}