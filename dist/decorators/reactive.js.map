{"version":3,"file":"reactive.js","names":["getListener","untrack","getKey","getPropsToSignalify","resetPropsToSignalify","getCreateSignalAccessor","accessKey","createSignalAccessor","hasOwnProperty","Object","prototype","reactive","value","context","kind","TypeError","Class","signalProps","ReactiveDecorator","constructor","args","instance","Reflect","construct","new","target","prop","initialValue","call","Error","toString","override"],"sources":["../../src/decorators/reactive.ts"],"sourcesContent":["import type {AnyConstructor} from 'lowclass'\nimport {getListener, untrack} from 'solid-js'\nimport {getKey, getPropsToSignalify, resetPropsToSignalify} from './signal.js'\nimport {getCreateSignalAccessor} from '../signalify.js'\n\n/**\n * Access key for classy-solid private internal APIs.\n */\nconst accessKey = getKey()\n\nconst createSignalAccessor = getCreateSignalAccessor()\nconst hasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * A decorator that makes a class reactive, allowing it have properties\n * decorated with `@signal` to make those properties reactive Solid signals.\n *\n * Example:\n *\n * ```js\n * import {reactive, signal} from 'classy-solid'\n * import {createEffect} from 'solid-js'\n *\n * ⁣@reactive\n * class Counter {\n *   ⁣@signal count = 0\n *\n *   constructor() {\n *     setInterval(() => this.count++, 1000)\n *   }\n * }\n *\n * const counter = new Counter\n *\n * createEffect(() => {\n *   console.log('count:', counter.count)\n * })\n * ```\n */\nexport function reactive(value: AnyConstructor, context: ClassDecoratorContext | undefined): any {\n\t// context may be undefined when unsing reactive() without decorators\n\tif (typeof value !== 'function' || (context && context.kind !== 'class'))\n\t\tthrow new TypeError('The @reactive decorator is only for use on classes.')\n\n\tconst Class = value\n\tconst signalProps = getPropsToSignalify(accessKey)\n\n\t// For the current class decorated with @reactive, we reset the map, so that\n\t// for the next class decorated with @reactive we track only that next\n\t// class's properties that were decorated with @signal. We do this because\n\t// field decorators do not have access to the class or its prototype.\n\t//\n\t// In the future maybe we can use decorator metadata for this\n\t// (https://github.com/tc39/proposal-decorator-metadata)?\n\tresetPropsToSignalify(accessKey)\n\n\tclass ReactiveDecorator extends Class {\n\t\tconstructor(...args: any[]) {\n\t\t\tlet instance!: ReactiveDecorator\n\n\t\t\t// Ensure that if we're in an effect that `new`ing a class does not\n\t\t\t// track signal reads, otherwise we'll get into an infinite loop. If\n\t\t\t// someone want to trigger an effect based on properties of the\n\t\t\t// `new`ed instance, they can explicitly read the properties\n\t\t\t// themselves in the effect, making their intent clear.\n\t\t\tif (getListener()) untrack(() => (instance = Reflect.construct(Class, args, new.target))) // super()\n\t\t\telse super(...args), (instance = this)\n\n\t\t\tfor (const [prop, {initialValue}] of signalProps) {\n\t\t\t\t// @prod-prune\n\t\t\t\tif (!(hasOwnProperty.call(instance, prop) || hasOwnProperty.call(Class.prototype, prop))) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Property \"${prop.toString()}\" not found on instance of class decorated with \\`@reactive\\`. Did you forget to use the \\`@reactive\\` decorator on one of your classes that has a \"${prop.toString()}\" property decorated with \\`@signal\\`?`,\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\t// For now at least, we always override like class fields with\n\t\t\t\t// [[Define]] semantics. Perhaps when @signal is used on a\n\t\t\t\t// getter/setter, we should not override in that case, but patch\n\t\t\t\t// the prototype getter/setter (that'll be a bit of work to\n\t\t\t\t// implement though).\n\t\t\t\tconst override = true\n\n\t\t\t\tcreateSignalAccessor(instance, prop as Exclude<keyof ReactiveDecorator, number>, initialValue, override)\n\t\t\t}\n\n\t\t\treturn instance\n\t\t}\n\t}\n\n\treturn ReactiveDecorator\n}\n"],"mappings":"AACA,SAAQA,WAAW,EAAEC,OAAO,QAAO,UAAU;AAC7C,SAAQC,MAAM,EAAEC,mBAAmB,EAAEC,qBAAqB,QAAO,aAAa;AAC9E,SAAQC,uBAAuB,QAAO,iBAAiB;;AAEvD;AACA;AACA;AACA,MAAMC,SAAS,GAAGJ,MAAM,CAAC,CAAC;AAE1B,MAAMK,oBAAoB,GAAGF,uBAAuB,CAAC,CAAC;AACtD,MAAMG,cAAc,GAAGC,MAAM,CAACC,SAAS,CAACF,cAAc;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,QAAQA,CAACC,KAAqB,EAAEC,OAA0C,EAAO;EAChG;EACA,IAAI,OAAOD,KAAK,KAAK,UAAU,IAAKC,OAAO,IAAIA,OAAO,CAACC,IAAI,KAAK,OAAQ,EACvE,MAAM,IAAIC,SAAS,CAAC,qDAAqD,CAAC;EAE3E,MAAMC,KAAK,GAAGJ,KAAK;EACnB,MAAMK,WAAW,GAAGd,mBAAmB,CAACG,SAAS,CAAC;;EAElD;EACA;EACA;EACA;EACA;EACA;EACA;EACAF,qBAAqB,CAACE,SAAS,CAAC;EAEhC,MAAMY,iBAAiB,SAASF,KAAK,CAAC;IACrCG,WAAWA,CAAC,GAAGC,IAAW,EAAE;MAC3B,IAAIC,QAA4B;;MAEhC;MACA;MACA;MACA;MACA;MACA,IAAIrB,WAAW,CAAC,CAAC,EAAEC,OAAO,CAAC,MAAOoB,QAAQ,GAAGC,OAAO,CAACC,SAAS,CAACP,KAAK,EAAEI,IAAI,EAAEI,GAAG,CAACC,MAAM,CAAE,CAAC,EAAC;MAAA,KACrF,KAAK,CAAC,GAAGL,IAAI,CAAC,EAAGC,QAAQ,GAAG,IAAK;MAEtC,KAAK,MAAM,CAACK,IAAI,EAAE;QAACC;MAAY,CAAC,CAAC,IAAIV,WAAW,EAAE;QACjD;QACA,IAAI,EAAET,cAAc,CAACoB,IAAI,CAACP,QAAQ,EAAEK,IAAI,CAAC,IAAIlB,cAAc,CAACoB,IAAI,CAACZ,KAAK,CAACN,SAAS,EAAEgB,IAAI,CAAC,CAAC,EAAE;UACzF,MAAM,IAAIG,KAAK,CACb,aAAYH,IAAI,CAACI,QAAQ,CAAC,CAAE,uJAAsJJ,IAAI,CAACI,QAAQ,CAAC,CAAE,wCACpM,CAAC;QACF;;QAEA;QACA;QACA;QACA;QACA;QACA,MAAMC,QAAQ,GAAG,IAAI;QAErBxB,oBAAoB,CAACc,QAAQ,EAAEK,IAAI,EAA8CC,YAAY,EAAEI,QAAQ,CAAC;MACzG;MAEA,OAAOV,QAAQ;IAChB;EACD;EAEA,OAAOH,iBAAiB;AACzB"}