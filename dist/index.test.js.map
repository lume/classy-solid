{"version":3,"file":"index.test.js","names":["createComputed","createRoot","testButterflyProps","b","initialColors","count","colors","wingSize","expect","toBe"],"sources":["../src/index.test.ts"],"sourcesContent":["import {createComputed, createRoot} from 'solid-js'\n\n// TODO move type def to @lume/cli, map @types/jest's `expect` type into the\n// global env.\ndeclare global {\n\tfunction expect(...args: any[]): any\n}\n\n// Test helper shared with other test files.\nexport function testButterflyProps(b: {colors: number; wingSize: number}, initialColors = 3) {\n\tlet count = 0\n\n\tcreateRoot(() => {\n\t\tcreateComputed(() => {\n\t\t\tb.colors\n\t\t\tb.wingSize\n\t\t\tcount++\n\t\t})\n\t})\n\n\texpect(b.colors).toBe(initialColors, 'initial colors value')\n\texpect(b.wingSize).toBe(2, 'initial wingSize value')\n\texpect(count).toBe(1, 'Should be reactive')\n\n\tb.colors++\n\n\texpect(b.colors).toBe(initialColors + 1, 'incremented colors value')\n\texpect(count).toBe(2, 'Should be reactive')\n\n\tb.wingSize++\n\n\texpect(b.wingSize).toBe(3, 'incremented wingSize value')\n\texpect(count).toBe(3, 'Should be reactive')\n}\n"],"mappings":"AAAA,SAAQA,cAAc,EAAEC,UAAU,QAAO,UAAU;;AAEnD;AACA;;AAKA;AACA,OAAO,SAASC,kBAAkBA,CAACC,CAAqC,EAAEC,aAAa,GAAG,CAAC,EAAE;EAC5F,IAAIC,KAAK,GAAG,CAAC;EAEbJ,UAAU,CAAC,MAAM;IAChBD,cAAc,CAAC,MAAM;MACpBG,CAAC,CAACG,MAAM;MACRH,CAAC,CAACI,QAAQ;MACVF,KAAK,EAAE;IACR,CAAC,CAAC;EACH,CAAC,CAAC;EAEFG,MAAM,CAACL,CAAC,CAACG,MAAM,CAAC,CAACG,IAAI,CAACL,aAAa,EAAE,sBAAsB,CAAC;EAC5DI,MAAM,CAACL,CAAC,CAACI,QAAQ,CAAC,CAACE,IAAI,CAAC,CAAC,EAAE,wBAAwB,CAAC;EACpDD,MAAM,CAACH,KAAK,CAAC,CAACI,IAAI,CAAC,CAAC,EAAE,oBAAoB,CAAC;EAE3CN,CAAC,CAACG,MAAM,EAAE;EAEVE,MAAM,CAACL,CAAC,CAACG,MAAM,CAAC,CAACG,IAAI,CAACL,aAAa,GAAG,CAAC,EAAE,0BAA0B,CAAC;EACpEI,MAAM,CAACH,KAAK,CAAC,CAACI,IAAI,CAAC,CAAC,EAAE,oBAAoB,CAAC;EAE3CN,CAAC,CAACI,QAAQ,EAAE;EAEZC,MAAM,CAACL,CAAC,CAACI,QAAQ,CAAC,CAACE,IAAI,CAAC,CAAC,EAAE,4BAA4B,CAAC;EACxDD,MAAM,CAACH,KAAK,CAAC,CAACI,IAAI,CAAC,CAAC,EAAE,oBAAoB,CAAC;AAC5C","ignoreList":[]}