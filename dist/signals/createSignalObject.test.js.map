{"version":3,"file":"createSignalObject.test.js","names":["createSignalObject","describe","it","num","set","expect","get","toBe","setResult","n","n1","num3","n3","undefined","num4","bool","b1","b","bool2","n4","func","fn","n5","func2","fn2","n6","stringOrFunc1","sf1","sf2","sf3","sf6","sf7","sf8","stringOrFunc2","sf9","sf10","sf11","sf12","sf13","sf14","sf15"],"sources":["../../src/signals/createSignalObject.test.ts"],"sourcesContent":["import {createSignalObject} from './createSignalObject.js'\n\ndescribe('classy-solid', () => {\n\tdescribe('createSignalObject()', () => {\n\t\tit('has gettable and settable values via .get and .set methods', () => {\n\t\t\tconst num = createSignalObject(0)\n\n\t\t\t// Set the variable's value by passing a value in.\n\t\t\tnum.set(1)\n\t\t\t// Read the variable's value by calling it with no args.\n\t\t\texpect(num.get()).toBe(1)\n\n\t\t\t// increment example:\n\t\t\tconst setResult = num.set(num.get() + 1)\n\t\t\texpect(num.get()).toBe(2)\n\t\t\texpect(setResult).toBe(2)\n\n\t\t\t// Set with a function that accepts the previous value and returns the next value.\n\t\t\tnum.set(n => n + 1)\n\t\t\texpect(num.get()).toBe(3)\n\t\t})\n\t})\n})\n\n//////////////////////////////////////////////////////////////////////////\n// createSignalObject type tests ///////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////\n\n{\n\tconst num = createSignalObject(1)\n\tlet n1: number = num.get()\n\tn1\n\tnum.set(123)\n\tnum.set(n => (n1 = n + 1))\n\t// @ts-expect-error Expected 1 arguments, but got 0. ts(2554)\n\tnum.set()\n\n\tconst num3 = createSignalObject<number>()\n\t// @ts-expect-error   Type 'undefined' is not assignable to type 'number'. ts(2322)\n\tlet n3: number = num3.get()\n\tnum3.set(123)\n\tnum3.set(undefined) // ok, accepts undefined\n\t// @ts-expect-error Object is possibly 'undefined'. ts(2532) (the `n` value)\n\tnum3.set(n => (n3 = n + 1))\n\t// num3.set() // ok, accepts undefined // FIXME broke in Solid 1.7.9\n\n\t// @ts-expect-error Argument of type 'boolean' is not assignable to parameter of type 'number'. ts(2345)\n\tconst num4 = createSignalObject<number>(true)\n\n\tconst bool = createSignalObject(true)\n\tlet b1: boolean = bool.get()\n\tb1\n\tbool.set(false)\n\tbool.set(b => (b1 = !b))\n\t// @ts-expect-error Expected 1 arguments, but got 0. ts(2554)\n\tbool.set()\n\n\tconst bool2 = createSignalObject<boolean>()\n\t// @ts-expect-error   Type 'undefined' is not assignable to type 'number'. ts(2322)\n\tlet n4: boolean = bool2.get()\n\tbool2.set(false)\n\tbool2.set(undefined) // ok, accepts undefined\n\tbool2.set(n => (n4 = !n)) // ok because undefined is being converted to boolean\n\t// @ts-expect-error Type 'boolean | undefined' is not assignable to type 'boolean'. ts(2322)\n\tbool2.set(n => (n4 = n))\n\t// bool2.set() // ok, accepts undefined // FIXME try Solid 1.7.9\n\n\tconst func = createSignalObject(() => 1)\n\t// @ts-expect-error 1 is not assignable to function (no overload matches)\n\tfunc.set(() => 1)\n\tfunc.set(() => (): 1 => 1) // ok, set the value to a function\n\tconst fn: () => 1 = func.get() // ok, returns function value\n\tfn\n\tconst n5: 1 = func.get()()\n\tn5\n\n\tconst func2 = createSignalObject<() => number>(() => 1)\n\t// @FIXME-ts-expect-error number is not assignable to function (no overload matches)\n\tfunc2.set(() => 1) // FIXME should be a type error. Try Solid 1.7.9\n\tfunc2.set(() => () => 1) // ok, set the value to a function\n\tconst fn2: () => number = func2.get() // ok, returns function value\n\tfn2\n\tconst n6: number = func2.get()()\n\tn6\n\n\tconst stringOrFunc1 = createSignalObject<(() => number) | string>('')\n\t// @FIXME-ts-expect-error number not assignable to string | (()=>number) | undefined\n\tstringOrFunc1.set(() => 1) // FIXME should be a type error. Try Solid 1.7.9\n\t// @ts-expect-error FIXME try Solid 1.7.9\n\tconst sf1: () => number = stringOrFunc1.set(() => () => 1)\n\tsf1\n\t// @ts-expect-error FIXME try Solid 1.7.9\n\tconst sf2: string = stringOrFunc1.set('oh yeah')\n\tsf2\n\t// @ts-expect-error FIXME try Solid 1.7.9\n\tconst sf3: string = stringOrFunc1.set(() => 'oh yeah')\n\tsf3\n\t// @ts-expect-error cannot set signal to undefined\n\tstringOrFunc1.set()\n\t// @ts-expect-error cannot set signal to undefined\n\tstringOrFunc1.set(undefined)\n\t// @ts-expect-error return value might be string\n\tconst sf6: () => number = stringOrFunc1.get()\n\tsf6\n\tconst sf7: (() => number) | string | undefined = stringOrFunc1.get()\n\tsf7\n\tconst sf8: (() => number) | string = stringOrFunc1.get()\n\tsf8\n\n\tconst stringOrFunc2 = createSignalObject<(() => number) | string>()\n\t// @FIXME-ts-expect-error number not assignable to string | (()=>number) | undefined\n\tstringOrFunc2.set(() => 1) // FIXME should be a type error. Try Solid 1.7.9\n\t// @ts-expect-error FIXME try Solid 1.7.9\n\tconst sf9: () => number = stringOrFunc2.set(() => () => 1)\n\tsf9\n\t// @ts-expect-error FIXME try Solid 1.7.9\n\tconst sf10: string = stringOrFunc2.set('oh yeah')\n\tsf10\n\t// @ts-expect-error FIXME try Solid 1.7.9\n\tconst sf11: string = stringOrFunc2.set(() => 'oh yeah')\n\tsf11\n\t// @ts-expect-error FIXME try Solid 1.7.9\n\tconst sf12: undefined = stringOrFunc2.set()\n\tsf12\n\t// @ts-expect-error FIXME try Solid 1.7.9\n\tconst sf13: undefined = stringOrFunc2.set(undefined)\n\tsf13\n\tconst sf14: (() => number) | string | undefined = stringOrFunc2.get()\n\tsf14\n\t// @ts-expect-error return value might be undefined\n\tconst sf15: (() => number) | string = stringOrFunc2.get()\n\tsf15\n}\n"],"mappings":"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","ignoreList":[]}